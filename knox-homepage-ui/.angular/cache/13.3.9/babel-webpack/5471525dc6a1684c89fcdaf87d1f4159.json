{"ast":null,"code":"import _createClass from \"/Users/mbalazs/projects/knox/knox-homepage-ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/mbalazs/projects/knox/knox-homepage-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, EventEmitter, Inject, Injectable, InjectionToken, Input, NgModule, Optional, Output } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n */\n\nimport * as ɵngcc0 from '@angular/core';\nvar DIR_DOCUMENT = /*#__PURE__*/new InjectionToken('cdk-dir-doc');\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\n\nvar Directionality = /*#__PURE__*/(function () {\n  var Directionality = /*#__PURE__*/_createClass(\n  /**\n   * @param {?=} _document\n   */\n  function Directionality(_document) {\n    _classCallCheck(this, Directionality);\n\n    /**\n     * The current 'ltr' or 'rtl' value.\n     */\n    this.value = 'ltr';\n    /**\n     * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n     */\n\n    this.change = new EventEmitter();\n\n    if (_document) {\n      // TODO: handle 'auto' value -\n      // We still need to account for dir=\"auto\".\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n      var\n      /** @type {?} */\n      bodyDir = _document.body ? _document.body.dir : null;\n      var\n      /** @type {?} */\n      htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      this.value =\n      /** @type {?} */\n      bodyDir || htmlDir || 'ltr';\n    }\n  });\n\n  Directionality.ɵfac = function Directionality_Factory(t) {\n    return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8));\n  };\n\n  Directionality.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: Directionality,\n    factory: Directionality.ɵfac\n  });\n  /** @nocollapse */\n\n  return Directionality;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\n\n\nvar Dir = /*#__PURE__*/(function () {\n  var Dir = /*#__PURE__*/function () {\n    function Dir() {\n      _classCallCheck(this, Dir);\n\n      this._dir = 'ltr';\n      /**\n       * Whether the `value` has been set to its initial value.\n       */\n\n      this._isInitialized = false;\n      /**\n       * Event emitted when the direction changes.\n       */\n\n      this.change = new EventEmitter();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n\n\n    _createClass(Dir, [{\n      key: \"dir\",\n      get: function get() {\n        return this._dir;\n      }\n      /**\n       * @param {?} v\n       * @return {?}\n       */\n      ,\n      set: function set(v) {\n        var\n        /** @type {?} */\n        old = this._dir;\n        this._dir = v;\n\n        if (old !== this._dir && this._isInitialized) {\n          this.change.emit(this._dir);\n        }\n      }\n      /**\n       * Current layout direction of the element.\n       * @return {?}\n       */\n\n    }, {\n      key: \"value\",\n      get: function get() {\n        return this.dir;\n      }\n      /**\n       * Initialize once default value has been set.\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngAfterContentInit\",\n      value: function ngAfterContentInit() {\n        this._isInitialized = true;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.change.complete();\n      }\n    }]);\n\n    return Dir;\n  }();\n\n  Dir.ɵfac = function Dir_Factory(t) {\n    return new (t || Dir)();\n  };\n\n  Dir.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: Dir,\n    selectors: [[\"\", \"dir\", \"\"]],\n    hostVars: 1,\n    hostBindings: function Dir_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"dir\", ctx.dir);\n      }\n    },\n    inputs: {\n      dir: \"dir\"\n    },\n    outputs: {\n      change: \"dirChange\"\n    },\n    exportAs: [\"dir\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: Directionality,\n      useExisting: Dir\n    }])]\n  });\n  /** @nocollapse */\n\n  return Dir;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar BidiModule = /*#__PURE__*/(function () {\n  var BidiModule = /*#__PURE__*/_createClass(function BidiModule() {\n    _classCallCheck(this, BidiModule);\n  });\n\n  BidiModule.ɵfac = function BidiModule_Factory(t) {\n    return new (t || BidiModule)();\n  };\n\n  BidiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: BidiModule\n  });\n  BidiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [{\n      provide: DIR_DOCUMENT,\n      useExisting: DOCUMENT\n    }, Directionality]\n  });\n  /** @nocollapse */\n\n  return BidiModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, {\n    declarations: [Dir],\n    exports: [Dir]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule }; //# sourceMappingURL=bidi.js.map","map":null,"metadata":{},"sourceType":"module"}