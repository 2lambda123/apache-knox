{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/mbalazs/projects/knox/knox-homepage-ui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/mbalazs/projects/knox/knox-homepage-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mbalazs/projects/knox/knox-homepage-ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalComponent } from 'ng2-bs3-modal';\nimport { HomepageService } from '../homepage.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../homepage.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/grid-list\";\nimport * as i5 from \"ng2-bs3-modal/ng2-bs3-modal\";\nvar _c0 = [\"apiServiceInformationModal\"];\n\nfunction TopologyInformationsComponent_div_5_ng_container_1_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 9);\n  }\n}\n\nfunction TopologyInformationsComponent_div_5_ng_container_1_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 10);\n  }\n}\n\nfunction TopologyInformationsComponent_div_5_ng_container_1_div_8_h5_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h5\");\n    i0.ɵɵtext(1, \"UI Services\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_3_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 19)(1, \"img\", 20);\n    i0.ɵɵlistener(\"error\", function TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_3_a_1_Template_img_error_1_listener() {\n      i0.ɵɵrestoreView(_r19);\n      var service_r13 = i0.ɵɵnextContext().$implicit;\n      var ctx_r17 = i0.ɵɵnextContext(4);\n      return ctx_r17.enableServiceText(\"enableServiceText_\" + service_r13.serviceName.toLowerCase());\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var service_r13 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate(\"href\", service_r13.serviceUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"assets/service-logos/\", service_r13.serviceName.toLowerCase(), \".png\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_3_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var service_r13 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate(\"href\", service_r13.serviceUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", service_r13.shortDesc, \" \");\n  }\n}\n\nfunction TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_3_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var service_r13 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(v\", service_r13.version, \")\");\n  }\n}\n\nfunction TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 14);\n    i0.ɵɵtemplate(1, TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_3_a_1_Template, 2, 2, \"a\", 15);\n    i0.ɵɵtemplate(2, TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_3_a_2_Template, 2, 2, \"a\", 15);\n    i0.ɵɵelementStart(3, \"mat-grid-tile-footer\", 16)(4, \"h3\");\n    i0.ɵɵtext(5);\n    i0.ɵɵtemplate(6, TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_3_span_6_Template, 2, 1, \"span\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"mat-grid-tile-footer\", 18)(8, \"h3\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    var service_r13 = ctx.$implicit;\n    var ctx_r10 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"colspan\", 1)(\"rowspan\", 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r10[\"enableServiceText_\" + service_r13.serviceName.toLowerCase()]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10[\"enableServiceText_\" + service_r13.serviceName.toLowerCase()]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", service_r13.shortDesc, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", service_r13.version);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(service_r13.description);\n  }\n}\n\nfunction TopologyInformationsComponent_div_5_ng_container_1_div_8_h5_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h5\");\n    i0.ɵɵtext(1, \"API Services\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 0);\n    i0.ɵɵlistener(\"click\", function TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_6_span_1_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r29);\n      var service_r23 = i0.ɵɵnextContext().$implicit;\n      var ctx_r27 = i0.ɵɵnextContext(4);\n      return ctx_r27.openApiServiceInformationModal(service_r23);\n    });\n    i0.ɵɵelementStart(1, \"img\", 20);\n    i0.ɵɵlistener(\"error\", function TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_6_span_1_Template_img_error_1_listener() {\n      i0.ɵɵrestoreView(_r29);\n      var service_r23 = i0.ɵɵnextContext().$implicit;\n      var ctx_r30 = i0.ɵɵnextContext(4);\n      return ctx_r30.enableServiceText(\"enableServiceText_\" + service_r23.serviceName.toLowerCase());\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var service_r23 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"assets/service-logos/\", service_r23.serviceName.toLowerCase(), \".png\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_6_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 0);\n    i0.ɵɵlistener(\"click\", function TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_6_span_2_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r35);\n      var service_r23 = i0.ɵɵnextContext().$implicit;\n      var ctx_r33 = i0.ɵɵnextContext(4);\n      return ctx_r33.openApiServiceInformationModal(service_r23);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var service_r23 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", service_r23.shortDesc, \" \");\n  }\n}\n\nfunction TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_6_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var service_r23 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(v\", service_r23.version, \")\");\n  }\n}\n\nfunction TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 14);\n    i0.ɵɵtemplate(1, TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_6_span_1_Template, 2, 1, \"span\", 22);\n    i0.ɵɵtemplate(2, TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_6_span_2_Template, 2, 1, \"span\", 22);\n    i0.ɵɵelementStart(3, \"mat-grid-tile-footer\", 16)(4, \"h3\");\n    i0.ɵɵtext(5);\n    i0.ɵɵtemplate(6, TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_6_span_6_Template, 2, 1, \"span\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"mat-grid-tile-footer\", 18)(8, \"h3\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    var service_r23 = ctx.$implicit;\n    var ctx_r12 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"colspan\", 1)(\"rowspan\", 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r12[\"enableServiceText_\" + service_r23.serviceName.toLowerCase()]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12[\"enableServiceText_\" + service_r23.serviceName.toLowerCase()]);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", service_r23.shortDesc, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", service_r23.version);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(service_r23.description);\n  }\n}\n\nfunction TopologyInformationsComponent_div_5_ng_container_1_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, TopologyInformationsComponent_div_5_ng_container_1_div_8_h5_1_Template, 2, 0, \"h5\", 1);\n    i0.ɵɵelementStart(2, \"mat-grid-list\", 12);\n    i0.ɵɵtemplate(3, TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_3_Template, 10, 7, \"mat-grid-tile\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, TopologyInformationsComponent_div_5_ng_container_1_div_8_h5_4_Template, 2, 0, \"h5\", 1);\n    i0.ɵɵelementStart(5, \"mat-grid-list\", 12);\n    i0.ɵɵtemplate(6, TopologyInformationsComponent_div_5_ng_container_1_div_8_mat_grid_tile_6_Template, 10, 7, \"mat-grid-tile\", 13);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var topology_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", topology_r5.uiServices.service.length > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", topology_r5.uiServices.service);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", topology_r5.apiServices.service.length > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", topology_r5.apiServices.service);\n  }\n}\n\nfunction TopologyInformationsComponent_div_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r40 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\")(2, \"span\", 0);\n    i0.ɵɵlistener(\"click\", function TopologyInformationsComponent_div_5_ng_container_1_Template_span_click_2_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r40);\n      var topology_r5 = restoredCtx.$implicit;\n      var ctx_r39 = i0.ɵɵnextContext(2);\n      return ctx_r39.toggleBoolean(\"showTopology_\" + topology_r5.topology);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 0);\n    i0.ɵɵlistener(\"click\", function TopologyInformationsComponent_div_5_ng_container_1_Template_span_click_3_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r40);\n      var topology_r5 = restoredCtx.$implicit;\n      var ctx_r41 = i0.ɵɵnextContext(2);\n      return ctx_r41.toggleBoolean(\"showTopology_\" + topology_r5.topology);\n    });\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, TopologyInformationsComponent_div_5_ng_container_1_span_6_Template, 1, 0, \"span\", 6);\n    i0.ɵɵtemplate(7, TopologyInformationsComponent_div_5_ng_container_1_span_7_Template, 1, 0, \"span\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, TopologyInformationsComponent_div_5_ng_container_1_div_8_Template, 7, 4, \"div\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var topology_r5 = ctx.$implicit;\n    var ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(\"clickable inline-glyph\\n      glyhpicon glyphicon-\" + (ctx_r4[\"showTopology_\" + topology_r5.topology] ? \"minus\" : \"plus\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(topology_r5.topology);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", topology_r5.pinned);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !topology_r5.pinned);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4[\"showTopology_\" + topology_r5.topology]);\n  }\n}\n\nfunction TopologyInformationsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TopologyInformationsComponent_div_5_ng_container_1_Template, 9, 6, \"ng-container\", 5);\n    i0.ɵɵelement(2, \"hr\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.topologies);\n  }\n}\n\nfunction TopologyInformationsComponent_bs_modal_header_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"bs-modal-header\", 23)(1, \"h4\", 24);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showDismiss\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.selectedApiService.shortDesc);\n  }\n}\n\nfunction TopologyInformationsComponent_bs_modal_body_9_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r42 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(v\", ctx_r42.selectedApiService.version, \")\");\n  }\n}\n\nfunction TopologyInformationsComponent_bs_modal_body_9_div_22_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\")(2, \"td\", 29);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"tr\", 30)(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var sample_r46 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(sample_r46.description);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\xA0\\xA0\", sample_r46.value, \"\");\n  }\n}\n\nfunction TopologyInformationsComponent_bs_modal_body_9_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TopologyInformationsComponent_bs_modal_body_9_div_22_ng_container_1_Template, 7, 2, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r43 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r43.selectedApiService.samples.sample);\n  }\n}\n\nfunction TopologyInformationsComponent_bs_modal_body_9_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"tr\")(2, \"td\", 29);\n    i0.ɵɵtext(3, \"There is no any sample found in service metadata\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"tr\")(5, \"td\");\n    i0.ɵɵtext(6, \"\\xA0You may check out the service's documentation and find out how to use its REST API. The service's URL is \");\n    i0.ɵɵelementStart(7, \"a\", 19);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    var ctx_r44 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵpropertyInterpolate(\"href\", ctx_r44.selectedApiService.serviceUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r44.selectedApiService.serviceUrl);\n  }\n}\n\nfunction TopologyInformationsComponent_bs_modal_body_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"bs-modal-body\")(1, \"div\", 25)(2, \"table\", 26)(3, \"colgroup\");\n    i0.ɵɵelement(4, \"col\", 27)(5, \"col\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"tr\")(7, \"td\", 29);\n    i0.ɵɵtext(8, \"Knox Service Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵtemplate(11, TopologyInformationsComponent_bs_modal_body_9_span_11_Template, 2, 1, \"span\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"tr\")(13, \"td\", 29);\n    i0.ɵɵtext(14, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"tr\")(18, \"td\", 29);\n    i0.ɵɵtext(19, \"Sample(s)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\")(21, \"table\", 26);\n    i0.ɵɵtemplate(22, TopologyInformationsComponent_bs_modal_body_9_div_22_Template, 2, 1, \"div\", 1);\n    i0.ɵɵtemplate(23, TopologyInformationsComponent_bs_modal_body_9_div_23_Template, 9, 2, \"div\", 1);\n    i0.ɵɵelementEnd()()()()()();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r3.selectedApiService.serviceName, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.selectedApiService.version);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r3.selectedApiService.description);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.selectedApiService.samples && ctx_r3.selectedApiService.samples.sample.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.selectedApiService.samples || ctx_r3.selectedApiService.samples.sample.length < 1);\n  }\n}\n\nexport var TopologyInformationsComponent = /*#__PURE__*/(function () {\n  var TopologyInformationsComponent = /*#__PURE__*/function () {\n    function TopologyInformationsComponent(homepageService, route) {\n      _classCallCheck(this, TopologyInformationsComponent);\n\n      this.homepageService = homepageService;\n      this.route = route;\n      this['showTopologies'] = true;\n    }\n\n    _createClass(TopologyInformationsComponent, [{\n      key: \"setTopologies\",\n      value: function setTopologies(topologies) {\n        this.topologies = topologies;\n        this.filterTopologies();\n\n        var _iterator = _createForOfIteratorHelper(topologies),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var topology = _step.value;\n            this['showTopology_' + topology.topology] = topology.pinned;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }, {\n      key: \"toggleBoolean\",\n      value: function toggleBoolean(propertyName) {\n        this[propertyName] = !this[propertyName];\n      }\n    }, {\n      key: \"enableServiceText\",\n      value: function enableServiceText(_enableServiceText) {\n        this[_enableServiceText] = true;\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        console.debug('TopologyInformationsComponent --> ngOnInit()');\n        this.homepageService.getTopologies().then(function (topologies) {\n          return _this.setTopologies(topologies);\n        });\n        this.route.queryParams.subscribe(function (params) {\n          var topologiesParam = params['topologies'];\n          console.debug('Topologies query param name = ' + topologiesParam);\n\n          if (topologiesParam) {\n            _this.desiredTopologies = topologiesParam.split(',');\n\n            _this.filterTopologies();\n          } else {\n            var profileName = params['profile'];\n            console.debug('Profile name = ' + profileName);\n\n            if (profileName) {\n              console.debug('Fetching profile information...');\n\n              _this.homepageService.getProfile(profileName).then(function (profile) {\n                return _this.setDesiredTopologiesFromProfile(profile);\n              });\n            }\n          }\n        });\n      }\n    }, {\n      key: \"setDesiredTopologiesFromProfile\",\n      value: function setDesiredTopologiesFromProfile(profile) {\n        var topologiesInProfile = profile['topologies'];\n\n        if (topologiesInProfile !== \"\") {\n          this.desiredTopologies = topologiesInProfile.split(',');\n          this.filterTopologies();\n        }\n      }\n    }, {\n      key: \"filterTopologies\",\n      value: function filterTopologies() {\n        if (this.topologies && this.desiredTopologies && this.desiredTopologies.length > 0) {\n          console.debug('Filtering topologies...');\n          var filteredTopologies = [];\n\n          var _iterator2 = _createForOfIteratorHelper(this.desiredTopologies),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var desiredTopology = _step2.value;\n\n              var _iterator3 = _createForOfIteratorHelper(this.topologies),\n                  _step3;\n\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var topology = _step3.value;\n\n                  if (topology.topology === desiredTopology) {\n                    filteredTopologies.push(topology);\n                  }\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          this.topologies = filteredTopologies;\n        }\n      }\n    }, {\n      key: \"openApiServiceInformationModal\",\n      value: function openApiServiceInformationModal(apiService) {\n        this.selectedApiService = apiService;\n        this.apiServiceInformationModal.open('lg');\n      }\n    }]);\n\n    return TopologyInformationsComponent;\n  }();\n\n  TopologyInformationsComponent.ɵfac = function TopologyInformationsComponent_Factory(t) {\n    return new (t || TopologyInformationsComponent)(i0.ɵɵdirectiveInject(i1.HomepageService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  TopologyInformationsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TopologyInformationsComponent,\n    selectors: [[\"app-topologies-information\"]],\n    viewQuery: function TopologyInformationsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.apiServiceInformationModal = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([HomepageService])],\n    decls: 13,\n    vars: 5,\n    consts: [[3, \"click\"], [4, \"ngIf\"], [\"apiServiceInformationModal\", \"\"], [3, \"showDismiss\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"inline-glyph glyphicon glyphicon-pushpin btn btn-xs\", \"title\", \"You may unpin this topology in gateway-site.xml by removing it from the list declared in 'knox.homepage.pinned.topologies'\", \"data-toggle\", \"tooltip\", 4, \"ngIf\"], [\"class\", \"inline-glyph glyphicon glyphicon-cog btn btn-xs\", \"title\", \"You may pin this topology in gateway-site.xml using the 'knox.homepage.pinned.topologies' property\", \"data-toggle\", \"tooltip\", 4, \"ngIf\"], [\"class\", \"table-responsive\", 4, \"ngIf\"], [\"title\", \"You may unpin this topology in gateway-site.xml by removing it from the list declared in 'knox.homepage.pinned.topologies'\", \"data-toggle\", \"tooltip\", 1, \"inline-glyph\", \"glyphicon\", \"glyphicon-pushpin\", \"btn\", \"btn-xs\"], [\"title\", \"You may pin this topology in gateway-site.xml using the 'knox.homepage.pinned.topologies' property\", \"data-toggle\", \"tooltip\", 1, \"inline-glyph\", \"glyphicon\", \"glyphicon-cog\", \"btn\", \"btn-xs\"], [1, \"table-responsive\"], [\"cols\", \"4\", \"rowHeight\", \"130px\"], [3, \"colspan\", \"rowspan\", 4, \"ngFor\", \"ngForOf\"], [3, \"colspan\", \"rowspan\"], [\"target\", \"_blank\", 3, \"href\", 4, \"ngIf\"], [1, \"tile-shortDesc\"], [\"class\", \"small\", 4, \"ngIf\"], [1, \"tile-longDesc\", 2, \"height\", \"100px\"], [\"target\", \"_blank\", 3, \"href\"], [\"height\", \"50px\", 3, \"src\", \"error\"], [1, \"small\"], [3, \"click\", 4, \"ngIf\"], [3, \"showDismiss\"], [1, \"modal-title\"], [1, \"panel\", \"panel-default\", \"table-responsive\"], [1, \"table\", \"table-sm\"], [\"width\", \"25%\"], [\"width\", \"75%\"], [2, \"font-weight\", \"bold\"], [2, \"margin-bottom\", \"15px\"]],\n    template: function TopologyInformationsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        var _r47 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelement(0, \"hr\");\n        i0.ɵɵelementStart(1, \"div\")(2, \"h4\", 0);\n        i0.ɵɵlistener(\"click\", function TopologyInformationsComponent_Template_h4_click_2_listener() {\n          return ctx.toggleBoolean(\"showTopologies\");\n        });\n        i0.ɵɵelement(3, \"span\");\n        i0.ɵɵtext(4, \"\\xA0Topologies\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(5, TopologyInformationsComponent_div_5_Template, 3, 1, \"div\", 1);\n        i0.ɵɵelementStart(6, \"bs-modal\", null, 2);\n        i0.ɵɵtemplate(8, TopologyInformationsComponent_bs_modal_header_8_Template, 3, 2, \"bs-modal-header\", 3);\n        i0.ɵɵtemplate(9, TopologyInformationsComponent_bs_modal_body_9_Template, 24, 5, \"bs-modal-body\", 1);\n        i0.ɵɵelementStart(10, \"bs-modal-footer\")(11, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function TopologyInformationsComponent_Template_button_click_11_listener() {\n          i0.ɵɵrestoreView(_r47);\n\n          var _r1 = i0.ɵɵreference(7);\n\n          return _r1.close();\n        });\n        i0.ɵɵtext(12, \"Close\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassMap(\"clickable inline-glyph glyhpicon glyphicon-\" + (ctx[\"showTopologies\"] ? \"minus\" : \"plus\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx[\"showTopologies\"]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedApiService);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedApiService);\n      }\n    },\n    directives: [i3.NgIf, i3.NgForOf, i4.MatGridList, i4.MatGridTile, i4.MatGridTileText, i4.MatGridTileFooterCssMatStyler, i5.BsModalComponent, i5.BsModalHeaderComponent, i5.BsModalBodyComponent, i5.BsModalFooterComponent],\n    styles: [\"mat-grid-tile[_ngcontent-%COMP%]   mat-grid-tile-footer[_ngcontent-%COMP%]{background:rgba(220,220,220,1);height:20px;color:#000}mat-grid-tile-footer[_ngcontent-%COMP%]   figcaption[_ngcontent-%COMP%]{width:100%}mat-grid-tile-footer[_ngcontent-%COMP%]   figcaption[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-weight:700;width:100%;text-align:center}.tile-shortDesc[_ngcontent-%COMP%]{cursor:pointer}.tile-longDesc[_ngcontent-%COMP%]{visibility:hidden;opacity:0;transition:all .3s linear;margin-bottom:20px;word-wrap:break-word}.tile-shortDesc[_ngcontent-%COMP%]:hover + .tile-longDesc[_ngcontent-%COMP%]{opacity:1;transition:all .3s linear;visibility:visible}\"]\n  });\n  return TopologyInformationsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}