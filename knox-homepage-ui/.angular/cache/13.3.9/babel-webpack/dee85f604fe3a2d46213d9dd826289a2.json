{"ast":null,"code":"import _classCallCheck from \"/Users/mbalazs/projects/knox/knox-homepage-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mbalazs/projects/knox/knox-homepage-ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport 'rxjs/add/operator/toPromise';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport var HomepageService = /*#__PURE__*/function () {\n  function HomepageService(http, route) {\n    _classCallCheck(this, HomepageService);\n\n    this.http = http;\n    this.route = route;\n    this.apiUrl = window.location.pathname.replace(new RegExp('home/.*'), 'api/v1/metadata/');\n    this.sessionUrl = window.location.pathname.replace(new RegExp('home/.*'), 'session/api/v1/sessioninfo');\n    this.generalProxyInformationUrl = this.apiUrl + 'info';\n    this.publicCertUrl = this.apiUrl + 'publicCert?type=';\n    this.topologiesUrl = this.apiUrl + 'topologies';\n  }\n\n  _createClass(HomepageService, [{\n    key: \"getGeneralProxyInformation\",\n    value: function getGeneralProxyInformation() {\n      var _this = this;\n\n      var headers = new HttpHeaders();\n      headers = this.addJsonHeaders(headers);\n      return this.http.get(this.generalProxyInformationUrl, {\n        headers: headers\n      }).toPromise().then(function (response) {\n        return response['generalProxyInfo'];\n      }).catch(function (err) {\n        console.debug('HomepageService --> getGeneralProxyInformation() --> ' + _this.generalProxyInformationUrl + '\\n  error: ' + err.message);\n\n        if (err.status === 401) {\n          window.location.assign(document.location.pathname);\n        } else {\n          return _this.handleError(err);\n        }\n      });\n    }\n  }, {\n    key: \"getTopologies\",\n    value: function getTopologies() {\n      var _this2 = this;\n\n      var headers = new HttpHeaders();\n      headers = this.addJsonHeaders(headers);\n      return this.http.get(this.topologiesUrl, {\n        headers: headers\n      }).toPromise().then(function (response) {\n        return response['topologyInformations'].topologyInformation;\n      }).catch(function (err) {\n        console.debug('HomepageService --> getTopologies() --> ' + _this2.topologiesUrl + '\\n  error: ' + err.message);\n\n        if (err.status === 401) {\n          window.location.assign(document.location.pathname);\n        } else {\n          return _this2.handleError(err);\n        }\n      });\n    }\n  }, {\n    key: \"getSessionInformation\",\n    value: function getSessionInformation() {\n      var _this3 = this;\n\n      var headers = new HttpHeaders();\n      headers = this.addJsonHeaders(headers);\n      return this.http.get(this.sessionUrl, {\n        headers: headers\n      }).toPromise().then(function (response) {\n        return response['sessioninfo'];\n      }).catch(function (err) {\n        console.debug('HomepageService --> getSessionInformation() --> ' + _this3.sessionUrl + '\\n  error: ' + err.message);\n\n        if (err.status === 401) {\n          window.location.assign(document.location.pathname);\n        } else {\n          return _this3.handleError(err);\n        }\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout(logoutUrl) {\n      var _this4 = this;\n\n      var headers = new HttpHeaders();\n      headers = this.addJsonHeaders(headers);\n      return this.http.get(logoutUrl, {\n        headers: headers\n      }).toPromise().then(function (response) {\n        return response['loggedOut'];\n      }).catch(function (err) {\n        console.debug('HomepageService --> logout() --> ' + logoutUrl + '\\n  error: ' + err.message);\n\n        if (err.status === 401) {\n          window.location.assign(document.location.pathname);\n        } else {\n          return _this4.handleError(err);\n        }\n      });\n    }\n  }, {\n    key: \"getProfile\",\n    value: function getProfile(profileName) {\n      var _this5 = this;\n\n      var headers = new HttpHeaders();\n      headers = this.addJsonHeaders(headers);\n      return this.http.get(this.apiUrl + '/profiles/' + profileName, {\n        headers: headers\n      }).toPromise().then(function (response) {\n        return response;\n      }).catch(function (err) {\n        console.debug('HomepageService --> getProfile() --> ' + _this5.apiUrl + '/profiles/' + profileName + '\\n  error: ' + err.message);\n\n        if (err.status === 401) {\n          window.location.assign(document.location.pathname);\n        } else {\n          return _this5.handleError(err);\n        }\n      });\n    }\n  }, {\n    key: \"addJsonHeaders\",\n    value: function addJsonHeaders(headers) {\n      return this.addCsrfHeaders(headers.append('Accept', 'application/json').append('Content-Type', 'application/json'));\n    }\n  }, {\n    key: \"addCsrfHeaders\",\n    value: function addCsrfHeaders(headers) {\n      return this.addXHRHeaders(headers.append('X-XSRF-Header', 'homepage'));\n    }\n  }, {\n    key: \"addXHRHeaders\",\n    value: function addXHRHeaders(headers) {\n      return headers.append('X-Requested-With', 'XMLHttpRequest');\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(error) {\n      //location.reload();\n      var refresh;\n      this.route.queryParams.subscribe(function (params) {\n        refresh = params['refresh'];\n        console.debug('refresh = ' + refresh);\n\n        if (refresh) {\n          console.debug('Refreshing page...', window.location.href);\n          var url = window.location.pathname.replace(new RegExp('refresh=1/.*'), '?'); //var url = window.location.pathname;\n          //window.location.assign(url);\n\n          window.location.reload();\n        }\n      });\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops!',\n        text: 'Something went wrong!\\n' + (error.error ? error.error : error.statusText),\n        confirmButtonColor: '#7cd1f9'\n      });\n      return Promise.reject(error.message || error);\n    }\n  }]);\n\n  return HomepageService;\n}();\n\nHomepageService.ɵfac = function HomepageService_Factory(t) {\n  return new (t || HomepageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ActivatedRoute));\n};\n\nHomepageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HomepageService,\n  factory: HomepageService.ɵfac\n});","map":{"version":3,"sources":["/Users/mbalazs/projects/knox/knox-homepage-ui/home/app/homepage.service.ts"],"names":["HttpClient","HttpHeaders","ActivatedRoute","Swal","i0","i1","i2","HomepageService","http","route","apiUrl","window","location","pathname","replace","RegExp","sessionUrl","generalProxyInformationUrl","publicCertUrl","topologiesUrl","headers","addJsonHeaders","get","toPromise","then","response","catch","err","console","debug","message","status","assign","document","handleError","topologyInformation","logoutUrl","profileName","addCsrfHeaders","append","addXHRHeaders","error","refresh","queryParams","subscribe","params","href","url","reload","fire","icon","title","text","statusText","confirmButtonColor","Promise","reject","ɵfac","HomepageService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":"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","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport 'rxjs/add/operator/toPromise';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class HomepageService {\n    constructor(http, route) {\n        this.http = http;\n        this.route = route;\n        this.apiUrl = window.location.pathname.replace(new RegExp('home/.*'), 'api/v1/metadata/');\n        this.sessionUrl = window.location.pathname.replace(new RegExp('home/.*'), 'session/api/v1/sessioninfo');\n        this.generalProxyInformationUrl = this.apiUrl + 'info';\n        this.publicCertUrl = this.apiUrl + 'publicCert?type=';\n        this.topologiesUrl = this.apiUrl + 'topologies';\n    }\n    getGeneralProxyInformation() {\n        let headers = new HttpHeaders();\n        headers = this.addJsonHeaders(headers);\n        return this.http.get(this.generalProxyInformationUrl, { headers: headers })\n            .toPromise()\n            .then(response => response['generalProxyInfo'])\n            .catch((err) => {\n            console.debug('HomepageService --> getGeneralProxyInformation() --> '\n                + this.generalProxyInformationUrl + '\\n  error: ' + err.message);\n            if (err.status === 401) {\n                window.location.assign(document.location.pathname);\n            }\n            else {\n                return this.handleError(err);\n            }\n        });\n    }\n    getTopologies() {\n        let headers = new HttpHeaders();\n        headers = this.addJsonHeaders(headers);\n        return this.http.get(this.topologiesUrl, { headers: headers })\n            .toPromise()\n            .then(response => response['topologyInformations'].topologyInformation)\n            .catch((err) => {\n            console.debug('HomepageService --> getTopologies() --> ' + this.topologiesUrl + '\\n  error: ' + err.message);\n            if (err.status === 401) {\n                window.location.assign(document.location.pathname);\n            }\n            else {\n                return this.handleError(err);\n            }\n        });\n    }\n    getSessionInformation() {\n        let headers = new HttpHeaders();\n        headers = this.addJsonHeaders(headers);\n        return this.http.get(this.sessionUrl, { headers: headers })\n            .toPromise()\n            .then(response => response['sessioninfo'])\n            .catch((err) => {\n            console.debug('HomepageService --> getSessionInformation() --> ' + this.sessionUrl + '\\n  error: ' + err.message);\n            if (err.status === 401) {\n                window.location.assign(document.location.pathname);\n            }\n            else {\n                return this.handleError(err);\n            }\n        });\n    }\n    logout(logoutUrl) {\n        let headers = new HttpHeaders();\n        headers = this.addJsonHeaders(headers);\n        return this.http.get(logoutUrl, { headers: headers })\n            .toPromise()\n            .then(response => response['loggedOut'])\n            .catch((err) => {\n            console.debug('HomepageService --> logout() --> ' + logoutUrl + '\\n  error: ' + err.message);\n            if (err.status === 401) {\n                window.location.assign(document.location.pathname);\n            }\n            else {\n                return this.handleError(err);\n            }\n        });\n    }\n    getProfile(profileName) {\n        let headers = new HttpHeaders();\n        headers = this.addJsonHeaders(headers);\n        return this.http.get(this.apiUrl + '/profiles/' + profileName, { headers: headers })\n            .toPromise()\n            .then(response => response)\n            .catch((err) => {\n            console.debug('HomepageService --> getProfile() --> ' + this.apiUrl + '/profiles/' + profileName + '\\n  error: ' + err.message);\n            if (err.status === 401) {\n                window.location.assign(document.location.pathname);\n            }\n            else {\n                return this.handleError(err);\n            }\n        });\n    }\n    addJsonHeaders(headers) {\n        return this.addCsrfHeaders(headers.append('Accept', 'application/json').append('Content-Type', 'application/json'));\n    }\n    addCsrfHeaders(headers) {\n        return this.addXHRHeaders(headers.append('X-XSRF-Header', 'homepage'));\n    }\n    addXHRHeaders(headers) {\n        return headers.append('X-Requested-With', 'XMLHttpRequest');\n    }\n    handleError(error) {\n        //location.reload();\n        let refresh;\n        this.route.queryParams.subscribe(params => {\n            refresh = params['refresh'];\n            console.debug('refresh = ' + refresh);\n            if (refresh) {\n                console.debug('Refreshing page...', window.location.href);\n                var url = window.location.pathname.replace(new RegExp('refresh=1/.*'), '?');\n                //var url = window.location.pathname;\n                //window.location.assign(url);\n                window.location.reload();\n            }\n        });\n        Swal.fire({\n            icon: 'error',\n            title: 'Oops!',\n            text: 'Something went wrong!\\n' + (error.error ? error.error : error.statusText),\n            confirmButtonColor: '#7cd1f9'\n        });\n        return Promise.reject(error.message || error);\n    }\n}\nHomepageService.ɵfac = function HomepageService_Factory(t) { return new (t || HomepageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ActivatedRoute)); };\nHomepageService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: HomepageService, factory: HomepageService.ɵfac });\n"]},"metadata":{},"sourceType":"module"}