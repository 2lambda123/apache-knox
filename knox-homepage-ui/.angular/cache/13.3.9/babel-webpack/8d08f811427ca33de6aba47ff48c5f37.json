{"ast":null,"code":"import _classCallCheck from \"/Users/mbalazs/projects/knox/knox-homepage-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mbalazs/projects/knox/knox-homepage-ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Injectable, Component, Input, Output, EventEmitter, ElementRef, HostBinding, NgZone, Directive, Optional, NgModule } from '@angular/core';\nimport { fromEvent, Observable, Subject, of, merge, zip } from 'rxjs';\nimport { filter, map, share, tap, take } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nvar _c0 = [\"*\"];\n\nfunction BsModalHeaderComponent_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function BsModalHeaderComponent_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.modal.dismiss();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 3);\n    ɵngcc0.ɵɵtext(2, \"\\xD7\");\n    ɵngcc0.ɵɵelementEnd()();\n  }\n}\n\nfunction BsModalFooterComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function BsModalFooterComponent_button_2_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.modal.dismiss();\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.dismissButtonLabel, \" \");\n  }\n}\n\nfunction BsModalFooterComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function BsModalFooterComponent_button_3_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.modal.close();\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.closeButtonLabel, \" \");\n  }\n}\n\nvar BsModalHideType = {\n  Close: 0,\n  Dismiss: 1,\n  Backdrop: 2,\n  Keyboard: 3,\n  RouteChange: 4,\n  Destroy: 5\n};\nBsModalHideType[BsModalHideType.Close] = 'Close';\nBsModalHideType[BsModalHideType.Dismiss] = 'Dismiss';\nBsModalHideType[BsModalHideType.Backdrop] = 'Backdrop';\nBsModalHideType[BsModalHideType.Keyboard] = 'Keyboard';\nBsModalHideType[BsModalHideType.RouteChange] = 'RouteChange';\nBsModalHideType[BsModalHideType.Destroy] = 'Destroy';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nvar BsModalSize = /*#__PURE__*/(function () {\n  var BsModalSize = /*#__PURE__*/function () {\n    function BsModalSize() {\n      _classCallCheck(this, BsModalSize);\n    }\n\n    _createClass(BsModalSize, null, [{\n      key: \"isValidSize\",\n      value:\n      /**\n       * @param {?} size\n       * @return {?}\n       */\n      function isValidSize(size) {\n        return size && (size === BsModalSize.Small || size === BsModalSize.Large);\n      }\n    }]);\n\n    return BsModalSize;\n  }();\n\n  BsModalSize.Small = 'sm';\n  BsModalSize.Large = 'lg';\n  /**\n   * @fileoverview added by tsickle\n   * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n   */\n\n  /**\n   * @fileoverview added by tsickle\n   * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n   */\n\n  /** @type {?} */\n\n  return BsModalSize;\n})();\nvar EVENT_SUFFIX = 'ng2-bs3-modal';\n/** @type {?} */\n\nvar KEYUP_EVENT_NAME = \"keyup.\".concat(EVENT_SUFFIX);\n/** @type {?} */\n\nvar CLICK_EVENT_NAME = \"click.\".concat(EVENT_SUFFIX);\n/** @type {?} */\n\nvar SHOW_EVENT_NAME = \"show.bs.modal.\".concat(EVENT_SUFFIX);\nvar BsModalService = /*#__PURE__*/(function () {\n  var BsModalService = /*#__PURE__*/function () {\n    function BsModalService() {\n      var _this = this;\n\n      _classCallCheck(this, BsModalService);\n\n      this.modals = [];\n      this.$body = jQuery(document.body);\n      this.onBackdropClose$ = fromEvent(this.$body, CLICK_EVENT_NAME).pipe(filter(function (e) {\n        return jQuery(e.target).is('.modal');\n      }), map(function () {\n        return BsModalHideType.Backdrop;\n      }), share());\n      this.onKeyboardClose$ = fromEvent(this.$body, KEYUP_EVENT_NAME).pipe(filter(function (e) {\n        return e.which === 27;\n      }), map(function () {\n        return BsModalHideType.Keyboard;\n      }), share());\n      this.onModalStack$ = fromEvent(this.$body, SHOW_EVENT_NAME).pipe(tap(function () {\n        /** @type {?} */\n        var zIndex = 1040 + 10 * jQuery('.modal:visible').length;\n        jQuery(_this).css('z-index', zIndex);\n        setTimeout(function () {\n          jQuery('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');\n        }, 0);\n      }), share());\n    }\n    /**\n     * @param {?} modal\n     * @return {?}\n     */\n\n\n    _createClass(BsModalService, [{\n      key: \"add\",\n      value: function add(modal) {\n        this.modals.push(modal);\n      }\n      /**\n       * @param {?} modal\n       * @return {?}\n       */\n\n    }, {\n      key: \"remove\",\n      value: function remove(modal) {\n        /** @type {?} */\n        var index = this.modals.indexOf(modal);\n\n        if (index > -1) {\n          this.modals.splice(index, 1);\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"focusNext\",\n      value: function focusNext() {\n        /** @type {?} */\n        var visible = this.modals.filter(function (m) {\n          return m.visible;\n        });\n\n        if (visible.length) {\n          this.$body.addClass('modal-open');\n          visible[visible.length - 1].focus();\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"dismissAll\",\n      value: function dismissAll() {\n        return Promise.all(this.modals.map(function (m) {\n          return m.dismiss();\n        }));\n      }\n    }]);\n\n    return BsModalService;\n  }();\n\n  BsModalService.ɵfac = function BsModalService_Factory(t) {\n    return new (t || BsModalService)();\n  };\n\n  BsModalService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: BsModalService,\n    factory: BsModalService.ɵfac\n  });\n  /** @nocollapse */\n\n  return BsModalService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar EVENT_SUFFIX$1 = 'ng2-bs3-modal';\n/** @type {?} */\n\nvar SHOW_EVENT_NAME$1 = \"show.bs.modal.\".concat(EVENT_SUFFIX$1);\n/** @type {?} */\n\nvar SHOWN_EVENT_NAME = \"shown.bs.modal.\".concat(EVENT_SUFFIX$1);\n/** @type {?} */\n\nvar HIDE_EVENT_NAME = \"hide.bs.modal.\".concat(EVENT_SUFFIX$1);\n/** @type {?} */\n\nvar HIDDEN_EVENT_NAME = \"hidden.bs.modal.\".concat(EVENT_SUFFIX$1);\n/** @type {?} */\n\nvar LOADED_EVENT_NAME = \"loaded.bs.modal.\".concat(EVENT_SUFFIX$1);\n/** @type {?} */\n\nvar DATA_KEY = 'bs.modal';\nvar BsModalComponent = /*#__PURE__*/(function () {\n  var BsModalComponent = /*#__PURE__*/function () {\n    /**\n     * @param {?} element\n     * @param {?} service\n     * @param {?} zone\n     */\n    function BsModalComponent(element, service, zone) {\n      var _this2 = this;\n\n      _classCallCheck(this, BsModalComponent);\n\n      this.element = element;\n      this.service = service;\n      this.zone = zone;\n      this.overrideSize = null;\n      this.onInternalClose$ = new Subject();\n      this.subscriptions = [];\n      this.visible = false;\n      this.showing = false;\n      this.hiding = false;\n      this.animation = true;\n      this.backdrop = true;\n      this.keyboard = true;\n      this.onShow = new EventEmitter();\n      this.onOpen = new EventEmitter();\n      this.onHide = new EventEmitter();\n      this.onClose = new EventEmitter();\n      this.onDismiss = new EventEmitter();\n      this.onLoaded = new EventEmitter();\n\n      this.setVisible = function (isVisible) {\n        return function () {\n          _this2.visible = isVisible;\n          _this2.showing = false;\n          _this2.hiding = false;\n        };\n      };\n\n      this.setOptions = function (options) {\n        /** @type {?} */\n        var backdrop = options.backdrop;\n\n        if (typeof backdrop === 'string' && backdrop !== 'static') {\n          backdrop = true;\n        }\n\n        if (options.backdrop !== undefined) {\n          _this2.options.backdrop = backdrop;\n        }\n\n        if (options.keyboard !== undefined) {\n          _this2.options.keyboard = options.keyboard;\n        }\n      };\n\n      this.service.add(this);\n      this.init();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(BsModalComponent, [{\n      key: \"options\",\n      get: function get() {\n        if (!this.$modal) {\n          this.init();\n        }\n\n        return this.$modal.data(DATA_KEY).options;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"fadeClass\",\n      get: function get() {\n        return this.animation;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"modalClass\",\n      get: function get() {\n        return true;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"roleAttr\",\n      get: function get() {\n        return 'dialog';\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"tabindexAttr\",\n      get: function get() {\n        return '-1';\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.wireUpEventEmitters();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this.$dialog = this.$modal.find('.modal-dialog');\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges() {\n        this.setOptions({\n          backdrop: this.backdrop,\n          keyboard: this.keyboard\n        });\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.onInternalClose$.next(BsModalHideType.Destroy);\n        return this.destroy();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"focus\",\n      value: function focus() {\n        this.$modal.trigger('focus');\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"routerCanDeactivate\",\n      value: function routerCanDeactivate() {\n        this.onInternalClose$.next(BsModalHideType.RouteChange);\n        return this.destroy();\n      }\n      /**\n       * @param {?=} size\n       * @return {?}\n       */\n\n    }, {\n      key: \"open\",\n      value: function open(size) {\n        this.overrideSize = null;\n\n        if (BsModalSize.isValidSize(size)) {\n          this.overrideSize = size;\n        }\n\n        return this.show().toPromise();\n      }\n      /**\n       * @param {?=} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"close\",\n      value: function close(value) {\n        var _this3 = this;\n\n        this.onInternalClose$.next(BsModalHideType.Close);\n        return this.hide().pipe(tap(function () {\n          return _this3.onClose.emit(value);\n        })).toPromise().then(function () {\n          return value;\n        });\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"dismiss\",\n      value: function dismiss() {\n        this.onInternalClose$.next(BsModalHideType.Dismiss);\n        return this.hide().toPromise();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"getCssClasses\",\n      value: function getCssClasses() {\n        /** @type {?} */\n        var classes = [];\n\n        if (this.isSmall()) {\n          classes.push('modal-sm');\n        }\n\n        if (this.isLarge()) {\n          classes.push('modal-lg');\n        }\n\n        if (this.cssClass) {\n          classes.push(this.cssClass);\n        }\n\n        return classes.join(' ');\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"isSmall\",\n      value: function isSmall() {\n        return this.overrideSize !== BsModalSize.Large && this.size === BsModalSize.Small || this.overrideSize === BsModalSize.Small;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"isLarge\",\n      value: function isLarge() {\n        return this.overrideSize !== BsModalSize.Small && this.size === BsModalSize.Large || this.overrideSize === BsModalSize.Large;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"show\",\n      value: function show() {\n        var _this4 = this;\n\n        if (this.visible && !this.hiding) {\n          return of(null);\n        }\n\n        this.showing = true;\n        return Observable.create(function (o) {\n          _this4.onShown$.pipe(take(1)).subscribe(function (next) {\n            o.next(next);\n            o.complete();\n          });\n\n          _this4.transitionFix();\n\n          _this4.$modal.modal('show');\n        });\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"transitionFix\",\n      value: function transitionFix() {\n        var _this5 = this;\n\n        // Fix for shown.bs.modal not firing when .fade is present\n        // https://github.com/twbs/bootstrap/issues/11793\n        if (this.animation) {\n          setTimeout(function () {\n            _this5.$modal.trigger('focus').trigger(SHOWN_EVENT_NAME);\n          }, jQuery.fn.modal['Constructor'].TRANSITION_DURATION);\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        var _this6 = this;\n\n        if (!this.visible && !this.showing) {\n          return of(null);\n        }\n\n        this.hiding = true;\n        return Observable.create(function (o) {\n          _this6.onHidden$.pipe(take(1)).subscribe(function (next) {\n            o.next(next);\n            o.complete();\n          });\n\n          _this6.$modal.modal('hide');\n        });\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"init\",\n      value: function init() {\n        var _this7 = this,\n            _this$subscriptions;\n\n        this.$modal = jQuery(this.element.nativeElement);\n        this.$modal.appendTo(document.body);\n        this.$modal.modal({\n          show: false\n        });\n        this.onShowEvent$ = fromEvent(this.$modal, SHOW_EVENT_NAME$1);\n        this.onShownEvent$ = fromEvent(this.$modal, SHOWN_EVENT_NAME);\n        this.onHideEvent$ = fromEvent(this.$modal, HIDE_EVENT_NAME);\n        this.onHiddenEvent$ = fromEvent(this.$modal, HIDDEN_EVENT_NAME);\n        this.onLoadedEvent$ = fromEvent(this.$modal, LOADED_EVENT_NAME);\n        /** @type {?} */\n\n        var onClose$ = merge(this.onInternalClose$, this.service.onBackdropClose$, this.service.onKeyboardClose$);\n        this.onHide$ = zip(this.onHideEvent$, onClose$).pipe(map(function (x) {\n          return (\n            /** @type {?} */\n            {\n              event: x[0],\n              type: x[1]\n            }\n          );\n        }));\n        this.onHidden$ = zip(this.onHiddenEvent$, onClose$).pipe(map(function (x) {\n          return x[1];\n        }), tap(this.setVisible(false)), tap(function () {\n          return _this7.service.focusNext();\n        }), share());\n        this.onShown$ = this.onShownEvent$.pipe(tap(this.setVisible(true)), share());\n        this.onDismiss$ = this.onHidden$.pipe(filter(function (x) {\n          return x !== BsModalHideType.Close;\n        })); // Start watching for events\n\n        (_this$subscriptions = this.subscriptions).push.apply(_this$subscriptions, [this.onShown$.subscribe(function () {}), this.onHidden$.subscribe(function () {}), this.service.onModalStack$.subscribe(function () {})]);\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"wireUpEventEmitters\",\n      value: function wireUpEventEmitters() {\n        this.wireUpEventEmitter(this.onShow, this.onShowEvent$);\n        this.wireUpEventEmitter(this.onOpen, this.onShown$);\n        this.wireUpEventEmitter(this.onHide, this.onHide$);\n        this.wireUpEventEmitter(this.onDismiss, this.onDismiss$);\n        this.wireUpEventEmitter(this.onLoaded, this.onLoadedEvent$);\n      }\n      /**\n       * @template T\n       * @param {?} emitter\n       * @param {?} stream$\n       * @return {?}\n       */\n\n    }, {\n      key: \"wireUpEventEmitter\",\n      value: function wireUpEventEmitter(emitter, stream$) {\n        var _this8 = this;\n\n        if (emitter.observers.length === 0) {\n          return;\n        }\n        /** @type {?} */\n\n\n        var sub = stream$.subscribe(function (next) {\n          _this8.zone.run(function () {\n            emitter.next(next);\n          });\n        });\n        this.subscriptions.push(sub);\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        var _this9 = this;\n\n        return this.hide().pipe(tap(function () {\n          _this9.service.remove(_this9);\n\n          _this9.subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n\n          _this9.subscriptions = [];\n\n          if (_this9.$modal) {\n            _this9.$modal.data(DATA_KEY, null);\n\n            _this9.$modal.remove();\n\n            _this9.$modal = null;\n          }\n        })).toPromise();\n      }\n    }]);\n\n    return BsModalComponent;\n  }();\n\n  BsModalComponent.ɵfac = function BsModalComponent_Factory(t) {\n    return new (t || BsModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(BsModalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  BsModalComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BsModalComponent,\n    selectors: [[\"bs-modal\"]],\n    hostVars: 6,\n    hostBindings: function BsModalComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.roleAttr)(\"tabindex\", ctx.tabindexAttr);\n        ɵngcc0.ɵɵclassProp(\"fade\", ctx.fadeClass)(\"modal\", ctx.modalClass);\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      backdrop: \"backdrop\",\n      keyboard: \"keyboard\",\n      size: \"size\",\n      cssClass: \"cssClass\"\n    },\n    outputs: {\n      onShow: \"onShow\",\n      onOpen: \"onOpen\",\n      onHide: \"onHide\",\n      onClose: \"onClose\",\n      onDismiss: \"onDismiss\",\n      onLoaded: \"onLoaded\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"modal-dialog\", 3, \"ngClass\"], [1, \"modal-content\"]],\n    template: function BsModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.getCssClasses());\n      }\n    },\n    directives: [ɵngcc1.NgClass],\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return BsModalComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nvar BsModalHeaderComponent = /*#__PURE__*/(function () {\n  var BsModalHeaderComponent = /*#__PURE__*/_createClass(\n  /**\n   * @param {?} modal\n   */\n  function BsModalHeaderComponent(modal) {\n    _classCallCheck(this, BsModalHeaderComponent);\n\n    this.modal = modal;\n    this.showDismiss = false;\n  });\n\n  BsModalHeaderComponent.ɵfac = function BsModalHeaderComponent_Factory(t) {\n    return new (t || BsModalHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(BsModalComponent));\n  };\n\n  BsModalHeaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BsModalHeaderComponent,\n    selectors: [[\"bs-modal-header\"]],\n    inputs: {\n      showDismiss: \"showDismiss\"\n    },\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"modal-header\"], [\"type\", \"button\", \"class\", \"close\", \"aria-label\", \"Dismiss\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Dismiss\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"]],\n    template: function BsModalHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, BsModalHeaderComponent_button_1_Template, 3, 0, \"button\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showDismiss);\n      }\n    },\n    directives: [ɵngcc1.NgIf],\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return BsModalHeaderComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nvar BsModalBodyComponent = /*#__PURE__*/(function () {\n  var BsModalBodyComponent = /*#__PURE__*/_createClass(function BsModalBodyComponent() {\n    _classCallCheck(this, BsModalBodyComponent);\n  });\n\n  BsModalBodyComponent.ɵfac = function BsModalBodyComponent_Factory(t) {\n    return new (t || BsModalBodyComponent)();\n  };\n\n  BsModalBodyComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BsModalBodyComponent,\n    selectors: [[\"bs-modal-body\"]],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"modal-body\"]],\n    template: function BsModalBodyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return BsModalBodyComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nvar BsModalFooterComponent = /*#__PURE__*/(function () {\n  var BsModalFooterComponent = /*#__PURE__*/_createClass(\n  /**\n   * @param {?} modal\n   */\n  function BsModalFooterComponent(modal) {\n    _classCallCheck(this, BsModalFooterComponent);\n\n    this.modal = modal;\n    this.showDefaultButtons = false;\n    this.dismissButtonLabel = 'Dismiss';\n    this.closeButtonLabel = 'Close';\n  });\n\n  BsModalFooterComponent.ɵfac = function BsModalFooterComponent_Factory(t) {\n    return new (t || BsModalFooterComponent)(ɵngcc0.ɵɵdirectiveInject(BsModalComponent));\n  };\n\n  BsModalFooterComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BsModalFooterComponent,\n    selectors: [[\"bs-modal-footer\"]],\n    inputs: {\n      showDefaultButtons: \"showDefaultButtons\",\n      dismissButtonLabel: \"dismissButtonLabel\",\n      closeButtonLabel: \"closeButtonLabel\"\n    },\n    ngContentSelectors: _c0,\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"modal-footer\"], [\"type\", \"button\", \"class\", \"btn btn-default\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function BsModalFooterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵtemplate(2, BsModalFooterComponent_button_2_Template, 2, 1, \"button\", 1);\n        ɵngcc0.ɵɵtemplate(3, BsModalFooterComponent_button_3_Template, 2, 1, \"button\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showDefaultButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showDefaultButtons);\n      }\n    },\n    directives: [ɵngcc1.NgIf],\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return BsModalFooterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nvar BsAutofocusDirective = /*#__PURE__*/(function () {\n  var BsAutofocusDirective = /*#__PURE__*/_createClass(\n  /**\n   * @param {?} el\n   * @param {?} modal\n   */\n  function BsAutofocusDirective(el, modal) {\n    var _this10 = this;\n\n    _classCallCheck(this, BsAutofocusDirective);\n\n    this.el = el;\n    this.modal = modal;\n\n    if (modal) {\n      this.modal.onOpen.subscribe(function () {\n        _this10.el.nativeElement.focus();\n      });\n    }\n  });\n\n  BsAutofocusDirective.ɵfac = function BsAutofocusDirective_Factory(t) {\n    return new (t || BsAutofocusDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(BsModalComponent, 8));\n  };\n\n  BsAutofocusDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: BsAutofocusDirective,\n    selectors: [[\"\", \"autofocus\", \"\"]]\n  });\n  /** @nocollapse */\n\n  return BsAutofocusDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nvar BsModalModule = /*#__PURE__*/(function () {\n  var BsModalModule = /*#__PURE__*/_createClass(function BsModalModule() {\n    _classCallCheck(this, BsModalModule);\n  });\n\n  BsModalModule.ɵfac = function BsModalModule_Factory(t) {\n    return new (t || BsModalModule)();\n  };\n\n  BsModalModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: BsModalModule\n  });\n  BsModalModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [BsModalService],\n    imports: [[CommonModule]]\n  });\n  return BsModalModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BsModalModule, {\n    declarations: function declarations() {\n      return [BsModalComponent, BsModalHeaderComponent, BsModalBodyComponent, BsModalFooterComponent, BsAutofocusDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [BsModalComponent, BsModalHeaderComponent, BsModalBodyComponent, BsModalFooterComponent, BsAutofocusDirective];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { BsModalService, BsModalComponent, BsModalHeaderComponent, BsModalBodyComponent, BsModalFooterComponent, BsModalHideType, BsModalSize, BsModalModule, BsAutofocusDirective as ɵa }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}